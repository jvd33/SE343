@model KennUTicket.Models.Ticket
@using KennUTicket.Extensions
@{
    ViewBag.Title = "Create";
}
@Scripts.Render("~/Scripts/jquery-1.10.2.js")
@Scripts.Render("~/Scripts/KennUTicketAPI.js")
@Scripts.Render("~/Scripts/tickets.js")
<h2>Create</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ticketForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Order Number", htmlAttributes: new { @class = "control-label col-md-2",  })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" }, @id="orderNumber", @onblur="validateOrder()"})
                @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger", @id="orderErr" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Product ID (SKU)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-success" id="result"></div>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ProductID, new { @class = "form-control .text-box .single-line" , id="productId", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control text-area" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignedTo.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AssignedToID, new SelectList(Model.GetUsers()), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedToID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Priority, new SelectList(Model.GetPriorities()), htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Category, new SelectList(Model.GetCategories()), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Refund Required?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("Refund Required", htmlAttributes: new { id="refund" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" onclick="onTicketCreate()" value="Create" class="btn btn-default" id="Create"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

