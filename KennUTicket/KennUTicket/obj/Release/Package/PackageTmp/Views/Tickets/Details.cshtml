@model KennUTicket.Models.Ticket
@using KennUTicket.Models
@using KennUTicket.DAL
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using KennUTicket.Extensions
@Scripts.Render("~/Scripts/KennUTicketAPI.js")
@functions {

    private string getUsername(string id)
    {
        var ctx = new TicketContext();
        var userStore = new UserStore<User>(ctx);
        var manager = new UserManager<User>(userStore);
        var user = manager.FindById(id);
        if (user != null)
        {
            return user.UserName;

        }
        else
        {
            return "";
        }
    }

    private string GetStatus(int id, Ticket t)
    {
        return t.GetStatusNames().FirstOrDefault(c => c.ID == id).StatusName;
    }
}

<h2>Details</h2>

<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Category)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category)
        </dd>

        <dt>
            @Html.DisplayName("Created By")
        </dt>

        <dd>
            @{
                var cid = getUsername(Model.CreatedByID);
            }
            @Html.DisplayFor(modelItem => cid)
        </dd>

        <dt>
            @Html.DisplayName("Assigned To")
        </dt>

        <dd>
            @{
                var aid = getUsername(Model.AssignedToID);
            }
            @Html.DisplayFor(modelItem => aid)
        </dd>

        <dt>
            @Html.DisplayName("Created On")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>

        <dt>
            @Html.DisplayName("Last Updated By")
        </dt>

        <dd>
            @{
                var lid = getUsername(Model.LastUpdatedByID);
            }
            @Html.DisplayFor(modelItem => lid)
        </dd>

        <dt>
            @Html.DisplayName("Last Updated On")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastUpdateDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Priority)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Priority)
        </dd>

        <dt>
            @Html.DisplayName("Product ID")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProductID)
        </dd>
        <dt>
            @Html.DisplayName("Order Number")
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderNumber)
        </dd>
        <dt>
            @Html.DisplayName("Ticket Status")
        </dt>
        <dd>
            @{ 
                var status = GetStatus(Model.StatusID, Model);
            }
            @status
        </dd>
    </dl>
</div>
<div id="statuses">
    @foreach (var item in Model.GetHistory())
    {
        <div>@item.Key - @item.Value</div>
    }
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
